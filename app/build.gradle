apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools
    flavorDimensions "default"

    defaultConfig {
        vectorDrawables.useSupportLibrary = true
        applicationId "com.beyondedge.hm"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode version_app.version_code
        versionName version_app.version_name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            ext.alwaysUpdateBuildId = false
        }
    }

    dataBinding {
        enabled = true
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            output.outputFileName = "HM_" + output.name + "_v${variant.versionName}_(${releaseTime()}).apk"
        }
    }

    android.variantFilter { variant ->
        if (variant.buildType.name.contains('release')) {
            variant.setIgnore(true)
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    productFlavors {
        def STRING = "String"
        def BOOLEAN = "boolean"
        def INT = "int"
        def TRUE = "true"
        def FALSE = "false"

        def LOG = "LOG"
        def TEMPLATE = "TEMPLATE"
        def LINK_CONFIG = "LINK_CONFIG"
        def ENABLE_CHECK_VERSION = "ENABLE_CHECK_VERSION"

        dev {
            applicationId "com.beyondedge.hm.qat"
            resValue "string", "app_name", "H&M Debug"
            buildConfigField BOOLEAN, LOG, TRUE
            buildConfigField BOOLEAN, TEMPLATE, TRUE
            buildConfigField BOOLEAN, ENABLE_CHECK_VERSION, FALSE
            buildConfigField STRING, LINK_CONFIG, "\"https://hm-uat-media.s3-ap-southeast-1.amazonaws.com/mobileapp/hmqat/setting/TH-EN.txt\""
        }

        stable_qat {
            applicationId "com.beyondedge.hm.qat"
            resValue "string", "app_name", "H&M QAT"
            buildConfigField BOOLEAN, LOG, FALSE
            buildConfigField BOOLEAN, TEMPLATE, TRUE
            buildConfigField BOOLEAN, ENABLE_CHECK_VERSION, FALSE
            buildConfigField STRING, LINK_CONFIG, "\"https://hm-uat-media.s3-ap-southeast-1.amazonaws.com/mobileapp/hmqat/setting/TH-EN.txt\""
        }

        stable_uat {
            applicationId "com.beyondedge.hm.uat"
            resValue "string", "app_name", "H&M UAT"
            buildConfigField BOOLEAN, LOG, FALSE
            buildConfigField BOOLEAN, TEMPLATE, FALSE
            buildConfigField BOOLEAN, ENABLE_CHECK_VERSION, FALSE
            buildConfigField STRING, LINK_CONFIG, "\"https://hm-uat-media.s3-ap-southeast-1.amazonaws.com/mobileapp/hmuat/setting/TH-EN.txt\""
        }

        prod {
            resValue "string", "app_name", "H&M"
            buildConfigField BOOLEAN, LOG, FALSE
            buildConfigField BOOLEAN, TEMPLATE, FALSE
            buildConfigField BOOLEAN, ENABLE_CHECK_VERSION, FALSE
            buildConfigField STRING, LINK_CONFIG, "\"https://hm-media.s3-ap-southeast-1.amazonaws.com/mobileapp/hm/setting/TH-EN.txt\""
        }
    }
}

static def releaseTime() {
    return new Date().format("yyyyMMdd HHmmss", TimeZone.getTimeZone("GMT+7"))
}

dependencies {
    api project(path: ':materialsearchview')
    api project(path: ':zxingscanner')
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    testImplementation 'androidx.test:core:1.2.0'
    testImplementation 'org.mockito:mockito-core:2.27.0'

    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation libraries.rxandroid
    implementation libraries.retrofit
    implementation libraries.retrofit_gson_converter
    implementation libraries.retrofit_log
    implementation libraries.retrofit_rx_adapter
    implementation libraries.gson
    implementation libraries.fabric
    implementation libraries.timber
    implementation libraries.power_preference
    implementation libraries.glide
    annotationProcessor libraries.glide_compiler

    implementation libraries.androidx_appcompat
    implementation libraries.androidx_recyclerview
    implementation libraries.androidx_material
    implementation libraries.androidx_constraintlayout
    implementation libraries.androidx_viewmodel
    implementation libraries.androidx_room
    annotationProcessor libraries.androidx_room_compiler

//    implementation libraries.barcodescanner_zxing
    implementation libraries.zxing_core
    implementation libraries.barcodescanner_core

    implementation libraries.ah_bottom_navigation
    implementation libraries.advanced_webview
    implementation libraries.awesome_plash
    implementation libraries.fetch_download_file
//    implementation libraries.fetch_download_file_plugin

    implementation libraries.rxjava2


}
